*{
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

body{
    font-family: 'poppins',sans-serif;
    font-size: 16px;
    line-height: 1.5;
    color: #333;
    background-color: #a1c3ff;
    
    
}
img{
    max-width: 100%;
    padding-top: 10px;
    height: 450px;
    padding-bottom: 10px;
}
h1,h2{
    margin-bottom: 15px;
}
.container{
    /* These two props make the layout to be in center of the webpage */
    max-width: 1100px;
    margin: 0 auto;
    padding: 0 30px;
}
.nav-bar{
    background: #3474e6;
    color: white;
    height: 60px;
}
ul{
    list-style-type: none;
}
.nav-bar .logo{
    font-size: x-large;
    font-weight: bold;
}
.nav-bar a {
    text-decoration: none;
    color: white;
    font-size: 18px;
    font-weight: bold;
} 
.nav-bar a:hover{
   color: lightblue;
}
.nav-bar .container{
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
}
.nav-bar ul{
    display: flex;
}
.nav-bar ul li{
    margin-left: 20px;
}

.header{
    background-color: #0a51cc;
    color: white;
    min-height: 400px;
}
.header h1{
    font-size: 3rem;
    font-weight: bold;
    line-height: 1.2 ;
}
.header img{
    max-width: 400px;
}
.header .container{
    display: flex;
    align-items: center;
    justify-content: space-between;

}

.boxes .container{
    display: flex;
    justify-content: space-between;
    
    
}
.box{
    flex: 1;
    background-color:#0a51cc;
    color: #fff;
    border-radius: 10px;
    margin: 20px 10px;
    box-shadow: 0 3px 5px rgba(0,0,0,0.6);
    padding: 15px 20px;
}
.box i{
    margin-right: 10px;
}
/* The breakpoints are done with text alignment in mind where the text alignment broke into more lines,so I could minimize layout changes, I think it worked out well as I think responsiveness using text size scaling works out the well when the grid layout is clean in terms of inputs required. */
@media screen and (max-width: 1082px){
    body{
        font-size: 0.85rem;
    }
    .header h1{
        font-size: 2.35rem;
    }
    .container{
        padding: 0 10px;
    }
}

@media only screen and (max-width: 768px) {
    body{
        font-size: 0.80rem;
        padding-top: 60px;
    }
    .header h1{
        padding-top: 10px;
        font-size: 2rem;
    }
    .container{
        padding: 0 5px;
    }

    .nav-bar {
        padding: 0 10px;
    }
    .nav-bar .logo {
        font-size: 20px;
    }

    .nav-bar a {
        font-size: 16px;
    }

    .header .container {
        flex-direction: column;
        align-items: center;
        text-align: center;
        height: auto;
    }

    .header {
        min-height: auto;
    }

    .header p {
        margin: 0px 30px;
    }
 /* I liked how the page looked better without the picture for mible, alternative I would add a different picture, but this looked cleaner to me */
    .header img {
        display: none;
    }

    .boxes .container {
        flex-direction: column;
        align-items: center;
    }

    .box {
        margin: 20px 0;
        max-width: 90%;
    }
/* just made it fixed for smaller screens. */
    .nav-bar {
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 1000;
    }
}

@media only screen and (max-width: 570px) {
    body {
        font-size: 0.75rem;
        padding-top: 40px;
    }

    .header h1{
        font-size: 1.5rem;
        margin-bottom: 5px;
    }
    .nav-bar {
        height: 40px;
    }

    .nav-bar .logo {
        font-size: 18px;
    }

    .nav-bar a {
        font-size: 14px;
    }
}

/* I assume with media query for iPad it was meant all tablets in general but
but I found out about adding device simulations in Safari while doing this task with Xcode so I decided to test it while doing the task. The above media should scale well for tablets in the general sense in case they are outside of the iPad media query as it looked fine, but I added these just to test out some more specific targeting. */

@media all and (min-width: 769px) and (min-height: 1024px) and (orientation:portrait) {
    body {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        background-color: rgb(241, 240, 237); /* Just to make it more obvious */
    }
    .nav-bar {
        background-color: rgb(51, 51, 153);
    }
    .header, .box {
        background-color: rgb(51, 51, 153);
    }
    .boxes {
        margin: auto 0; /* Centering them since the viewport is tall on modern iPads */
    }
}